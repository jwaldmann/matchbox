termination proof not accepted
1: error below switch to dependency pairs
1.1: error below the reduction pair processor
 1.1.1: error below the split processor
  1.1.1.1: error below the semlab processor
   1.1.1.1.1: error below the reduction pair processor
    1.1.1.1.1.1: error when applying the reduction pair processor with usable rules to remove from the DP problem
     pairs:
     
     p#[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[0, 0]](x3, x4))) -> p#[[0, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[0, 1]](x3, x4))) -> p#[[0, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[1, 0]](x3, x4))) -> p#[[0, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[1, 1]](x3, x4))) -> p#[[0, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[0, 0]](x3, x4))) -> p#[[1, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[0, 1]](x3, x4))) -> p#[[1, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[1, 0]](x3, x4))) -> p#[[1, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[1, 1]](x3, x4))) -> p#[[1, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[0, 0]](x3, x4))) -> p#[[0, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[0, 1]](x3, x4))) -> p#[[0, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[1, 0]](x3, x4))) -> p#[[0, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[1, 1]](x3, x4))) -> p#[[0, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[0, 0]](x3, x4))) -> p#[[1, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[0, 1]](x3, x4))) -> p#[[1, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[1, 0]](x3, x4))) -> p#[[1, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[1, 1]](x3, x4))) -> p#[[1, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     rules:
     
     p[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[0, 0]](x3, x4))) -> p[[0, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[0, 1]](x3, x4))) -> p[[0, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[1, 0]](x3, x4))) -> p[[0, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[1, 1]](x3, x4))) -> p[[0, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[0, 0]](x3, x4))) -> p[[1, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[0, 1]](x3, x4))) -> p[[1, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[1, 0]](x3, x4))) -> p[[1, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[1, 1]](x3, x4))) -> p[[1, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[0, 0]](x3, x4))) -> p[[0, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[0, 1]](x3, x4))) -> p[[0, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[1, 0]](x3, x4))) -> p[[0, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[1, 1]](x3, x4))) -> p[[0, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[0, 0]](x3, x4))) -> p[[1, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[0, 1]](x3, x4))) -> p[[1, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[1, 0]](x3, x4))) -> p[[1, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[1, 1]](x3, x4))) -> p[[1, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     
     (minimal)
      the pairs 
     p#[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[1, 1]](x3, x4))) -> p#[[1, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[1, 0]](x3, x4))) -> p#[[1, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[0, 1]](x3, x4))) -> p#[[1, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[1, 0]](x2, p[[0, 0]](x3, x4))) -> p#[[1, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[1, 1]](x3, x4))) -> p#[[0, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[1, 0]](x3, x4))) -> p#[[0, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[0, 1]](x3, x4))) -> p#[[0, 0]](x2, p[[1, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[1]](x1), p[[0, 0]](x2, p[[0, 0]](x3, x4))) -> p#[[0, 0]](x2, p[[1, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[1, 1]](x3, x4))) -> p#[[1, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[1, 0]](x3, x4))) -> p#[[1, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[0, 1]](x3, x4))) -> p#[[1, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[1, 0]](x2, p[[0, 0]](x3, x4))) -> p#[[1, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[1, 1]](x3, x4))) -> p#[[0, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[1, 0]](x3, x4))) -> p#[[0, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[0, 1]](x3, x4))) -> p#[[0, 0]](x2, p[[0, 0]](x1, p[[1, 1]](a[[1]](x4), x4)))
     p#[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[0, 0]](x3, x4))) -> p#[[0, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     
     could not apply the generic reduction pair processor with the following
     polynomial interpretration over matrix interpretation
     Pol(p#[[0, 0]](x_1, x_2)) = [[25]]
     Pol(p#[[0, 1]](x_1, x_2)) = x_2
     Pol(p#[[1, 0]](x_1, x_2)) = [[15]] + x_2
     Pol(p#[[1, 1]](x_1, x_2)) = [[13]] + x_2
     Pol(a[[0]](x_1)) = [[1]]
     Pol(a[[1]](x_1)) = [[7]] + x_1
     Pol(p[[0, 0]](x_1, x_2)) = [[6]]
     Pol(p[[0, 1]](x_1, x_2)) = [[4]]
     Pol(p[[1, 0]](x_1, x_2)) = [[8]]
     Pol(p[[1, 1]](x_1, x_2)) = [[3]]
     problem when orienting DPs
     could not ensure p#[[1, 0]](a[[0]](x1), p[[0, 0]](x2, p[[0, 0]](x3, x4))) > p#[[0, 0]](x2, p[[0, 0]](x1, p[[1, 0]](a[[0]](x4), x4)))
     problem when comparing [[21]] > [[25]]
     problem when comparing constant part
